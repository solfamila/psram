# CMakeLists.txt for MIMXRT700 XSPI PSRAM project using Clang/LLVM
# This is a modified version of the original CMakeLists.txt to work with Clang

cmake_minimum_required(VERSION 3.10.0)

# THE VERSION NUMBER
SET (MCUXPRESSO_CMAKE_FORMAT_MAJOR_VERSION 2)
SET (MCUXPRESSO_CMAKE_FORMAT_MINOR_VERSION 0)

include(ide_overrides.cmake OPTIONAL)

if(CMAKE_SCRIPT_MODE_FILE)
  message("${MCUXPRESSO_CMAKE_FORMAT_MAJOR_VERSION}")
  return()
endif()

message(STATUS "Using Clang/LLVM toolchain for ARM Cortex-M33")

set(CMAKE_STATIC_LIBRARY_PREFIX)
set(CMAKE_STATIC_LIBRARY_SUFFIX)

set(CMAKE_EXECUTABLE_LIBRARY_PREFIX)
set(CMAKE_EXECUTABLE_LIBRARY_SUFFIX)

# CURRENT DIRECTORY
set(ProjDirPath ${CMAKE_CURRENT_SOURCE_DIR})

set(EXECUTABLE_OUTPUT_PATH ${ProjDirPath}/${CMAKE_BUILD_TYPE})
set(LIBRARY_OUTPUT_PATH ${ProjDirPath}/${CMAKE_BUILD_TYPE})

project(xspi_psram_polling_transfer_cm33_core0)

enable_language(ASM)

set(MCUX_BUILD_TYPES debug flash_debug release flash_release)

set(MCUX_SDK_PROJECT_NAME xspi_psram_polling_transfer_cm33_core0.elf)

# SDK root path - adjust this to match your project structure
if (NOT DEFINED SdkRootDirPath)
    SET(SdkRootDirPath ${ProjDirPath}/../../__repo__)
endif()

# Include Clang-specific flags
include(${ProjDirPath}/flags_clang.cmake)

# Include project configuration
include(${ProjDirPath}/config.cmake)

# Add executable with all source files
add_executable(${MCUX_SDK_PROJECT_NAME}
"${ProjDirPath}/../../xspi_psram_polling_transfer.c"
"${ProjDirPath}/../../xspi_psram_ops.c"
"${ProjDirPath}/../../board.h"
"${ProjDirPath}/../../board.c"
"${ProjDirPath}/../../clock_config.h"
"${ProjDirPath}/../../clock_config.c"
"${ProjDirPath}/../../pin_mux.c"
"${ProjDirPath}/../../pin_mux.h"
"${ProjDirPath}/../../hardware_init.c"
"${ProjDirPath}/../../app.h"
"${ProjDirPath}/../../mcux_config.h"
)

# Include directories
target_include_directories(${MCUX_SDK_PROJECT_NAME} PRIVATE
    ${ProjDirPath}/../..
)

# Include MCUXpresso SDK configuration functions
include(${SdkRootDirPath}/tools/cmake_toolchain_files/mcux_config.cmake)

# Include device-specific libraries and drivers
include(${SdkRootDirPath}/devices/MIMXRT798S/all_lib_device.cmake)

# System libraries for embedded ARM with Clang
IF(NOT DEFINED TARGET_LINK_SYSTEM_LIBRARIES)  
    SET(TARGET_LINK_SYSTEM_LIBRARIES "-lm -lc -lgcc -lnosys")  
ENDIF()  

# Link libraries
TARGET_LINK_LIBRARIES(${MCUX_SDK_PROJECT_NAME} PRIVATE -Wl,--start-group)
target_link_libraries(${MCUX_SDK_PROJECT_NAME} PRIVATE ${TARGET_LINK_SYSTEM_LIBRARIES})
TARGET_LINK_LIBRARIES(${MCUX_SDK_PROJECT_NAME} PRIVATE -Wl,--end-group)

# Generate binary file from ELF (with fixed objcopy command for proper binary size)
ADD_CUSTOM_COMMAND(TARGET ${MCUX_SDK_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_OBJCOPY}
-Obinary --only-section=.flash_config --only-section=.interrupts --only-section=.text --only-section=.ARM --only-section=.ctors --only-section=.dtors --only-section=.data ${EXECUTABLE_OUTPUT_PATH}/${MCUX_SDK_PROJECT_NAME} ${EXECUTABLE_OUTPUT_PATH}/xspi_psram_polling_transfer.bin)

# Clean up additional files
set_target_properties(${MCUX_SDK_PROJECT_NAME} PROPERTIES ADDITIONAL_CLEAN_FILES "output.map;${EXECUTABLE_OUTPUT_PATH}/xspi_psram_polling_transfer.bin")

# Wrap all libraries with start-group/end-group to prevent link order issues
group_link_libraries()

