<?xml version="1.0" encoding="UTF-8"?>
<ksdk:examples xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd manifest.xsd">
  <externalDefinitions>
    <definition extID="cm33_core0_MIMXRT798S"/>
    <definition extID="CMSIS_Include_core_cm.MIMXRT798S"/>
    <definition extID="middleware.eiq.executorch.MIMXRT798S"/>
    <definition extID="middleware.eiq.executorch.neutron.MIMXRT798S"/>
    <definition extID="middleware.eiq.executorch.source.MIMXRT798S"/>
    <definition extID="armgcc"/>
    <definition extID="mcuxpresso"/>
    <definition extID="com.nxp.mcuxpresso"/>
  </externalDefinitions>
  <example id="mimxrt700evk_executorch_lib_cm33_core0" name="executorch_lib_cm33_core0" device_core="cm33_core0_MIMXRT798S" dependency="CMSIS_Include_core_cm.MIMXRT798S middleware.eiq.executorch.MIMXRT798S middleware.eiq.executorch.neutron.MIMXRT798S middleware.eiq.executorch.source.MIMXRT798S" category="eiq_examples">
    <projects>
      <project type="com.crt.advproject.projecttype.lib" nature="org.eclipse.cdt.core.ccnature"/>
    </projects>
    <toolchainSettings>
      <toolchainSetting id_refs="com.nxp.mcuxpresso">
        <option id="gnu.c.compiler.option.preprocessor.def.symbols" type="stringList">
          <value>MCUXPRESSO_SDK</value>
          <value>CPU_MIMXRT798SGFOA_cm33_core0</value>
          <value>NO_HEAP_USAGE=1</value>
        </option>
        <option id="gnu.cpp.compiler.option.preprocessor.def" type="stringList">
          <value>MCUXPRESSO_SDK</value>
          <value>CPU_MIMXRT798SGFOA_cm33_core0</value>
          <value>NO_HEAP_USAGE=1</value>
        </option>
        <option id="com.crt.advproject.c.misc.dialect" type="enum">
          <value>com.crt.advproject.misc.dialect.gnu99</value>
        </option>
        <option id="gnu.c.compiler.option.optimization.flags" type="string">
          <value>-fno-common</value>
        </option>
        <option id="com.crt.advproject.gcc.fpu" type="enum">
          <value>com.crt.advproject.gcc.fpu.fpv5sp.hard</value>
        </option>
        <option id="gnu.c.compiler.option.misc.other" type="string">
          <value>-c -ffunction-sections -fdata-sections -fno-builtin -mcpu=cortex-m33</value>
        </option>
        <option id="gnu.c.compiler.option.warnings.nowarn" type="boolean">
          <value>false</value>
        </option>
        <option id="gnu.c.compiler.option.warnings.allwarn" type="boolean">
          <value>false</value>
        </option>
        <option id="gnu.c.compiler.option.warnings.extrawarn" type="boolean">
          <value>false</value>
        </option>
        <option id="gnu.c.compiler.option.warnings.wconversion" type="boolean">
          <value>false</value>
        </option>
        <option id="gnu.c.compiler.option.warnings.toerrors" type="boolean">
          <value>false</value>
        </option>
        <option id="gnu.cpp.compiler.option.optimization.flags" type="string">
          <value>-fno-common</value>
        </option>
        <option id="com.crt.advproject.cpp.misc.dialect" type="enum">
          <value>com.crt.advproject.misc.dialect.gnupp11</value>
        </option>
        <option id="com.crt.advproject.cpp.fpu" type="enum">
          <value>com.crt.advproject.cpp.fpu.fpv5sp.hard</value>
        </option>
        <option id="gnu.cpp.compiler.option.other.other" type="string">
          <value>-std=gnu++17 -c -ffunction-sections -fdata-sections -fno-builtin -fno-rtti -fno-exceptions -mcpu=cortex-m33</value>
        </option>
        <option id="gnu.cpp.link.option.nostdlibs" type="boolean">
          <value>true</value>
        </option>
        <option id="gnu.cpp.link.option.other" type="stringList">
          <value>-no-warn-rwx-segments</value>
        </option>
        <option id="com.crt.advproject.gas.fpu" type="enum">
          <value>com.crt.advproject.gas.fpu.fpv5sp.hard</value>
        </option>
      </toolchainSetting>
    </toolchainSettings>
    <source path="armgcc" project_relative_path="./" type="workspace" toolchain="armgcc">
      <files mask="build_all.bat"/>
      <files mask="build_all.sh"/>
      <files mask="clean.bat"/>
      <files mask="clean.sh"/>
      <files mask="CMakeLists.txt"/>
      <files mask="flags.cmake"/>
      <files mask="config.cmake"/>
      <files mask="build_debug.bat"/>
      <files mask="build_debug.sh"/>
      <files mask="build_release.bat"/>
      <files mask="build_release.sh"/>
    </source>
    <source path="../../../../../devices/MIMXRT798S" project_relative_path="./" type="workspace" toolchain="armgcc">
      <files mask="all_lib_device.cmake"/>
    </source>
    <source path="." project_relative_path="source" type="c_preinclude">
      <files mask="mcux_config.h"/>
    </source>
    <source path="." project_relative_path="doc" type="doc">
      <files mask="readme.md"/>
    </source>
  </example>
</ksdk:examples>
